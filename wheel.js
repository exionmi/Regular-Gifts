// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤ –¥–ª—è –∫–æ–ª–µ—Å–∞ —Å —ç–º–æ–¥–∑–∏
const gifts = [
    { id: 1, name: "–ú–∏—à–∫–∞", image: "üß∏", value: 10, color: "#FFD700", chance: 10 },
    { id: 2, name: "–°–µ—Ä–¥–µ—á–∫–æ", image: "üíù", value: 5, color: "#FF6B6B", chance: 15 },
    { id: 3, name: "–ü–æ–¥–∞—Ä–æ–∫", image: "üéÅ", value: 20, color: "#4CAF50", chance: 8 },
    { id: 4, name: "–†–æ–∑–∞", image: "üåπ", value: 15, color: "#E91E63", chance: 10 },
    { id: 5, name: "–¶–≤–µ—Ç—ã", image: "üíê", value: 25, color: "#9C27B0", chance: 7 },
    { id: 6, name: "–®–∞–º–ø–∞–Ω—Å–∫–æ–µ", image: "üçæ", value: 30, color: "#00BCD4", chance: 5 },
    { id: 7, name: "–†–∞–∫–µ—Ç–∞", image: "üöÄ", value: 50, color: "#3F51B5", chance: 2 },
    { id: 8, name: "–ö—É–±–æ–∫", image: "üèÜ", value: 40, color: "#FFC107", chance: 3 },
    { id: 9, name: "–ê–ª–º–∞–∑", image: "üíé", value: 100, color: "#2196F3", chance: 1 },
    { id: 10, name: "–ö–æ–ª—å—Ü–æ", image: "üíç", value: 75, color: "#607D8B", chance: 2 }
];

// –ü—Ä–æ—Å—Ç–∞—è –∏ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–ª–µ—Å–∞
function createWheel() {
    const wheel = document.getElementById('fortune-wheel');
    wheel.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    
    const sections = gifts.length;
    const angle = 360 / sections;
    
    for (let i = 0; i < sections; i++) {
        const gift = gifts[i];
        
        // –°–æ–∑–¥–∞–µ–º —Å–µ–∫—Ü–∏—é
        const section = document.createElement('div');
        section.className = 'wheel-section';
        
        // –ó–∞–¥–∞–µ–º —Ü–≤–µ—Ç –∏ –ø–æ–≤–µ—Ä–Ω—É—Ç—ã–π —É–≥–æ–ª
        section.style.backgroundColor = gift.color;
        section.style.transform = `rotate(${i * angle}deg)`;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏
        const emoji = document.createElement('span');
        emoji.className = 'emoji-icon';
        emoji.textContent = gift.image;
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM
        section.appendChild(emoji);
        wheel.appendChild(section);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—Ä–∞—â–µ–Ω–∏—è –∫–æ–ª–µ—Å–∞, —á—Ç–æ–±—ã –ø—Ä–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª —Ç–æ–º—É, –Ω–∞ —á–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å —Å—Ç—Ä–µ–ª–∫–∞
function spinWheel() {
    const wheel = document.getElementById('fortune-wheel');
    const spinButton = document.getElementById('spin-btn');
    
    // –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è
    spinButton.disabled = true;
    spinButton.textContent = '–ö—Ä—É—Ç–∏—Ç—Å—è...';
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª –≤—Ä–∞—â–µ–Ω–∏—è (–º–Ω–æ–≥–æ –æ–±–æ—Ä–æ—Ç–æ–≤ + —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ)
    const minRotations = 5;  // –º–∏–Ω–∏–º—É–º –ø–æ–ª–Ω—ã—Ö –æ–±–æ—Ä–æ—Ç–æ–≤
    const maxExtraRotations = 3; // –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–æ—Ä–æ—Ç—ã –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    const randomRotations = minRotations + Math.random() * maxExtraRotations;
    const randomAngle = Math.floor(Math.random() * 360); // –°–ª—É—á–∞–π–Ω—ã–π —É–≥–æ–ª –≤ –≥—Ä–∞–¥—É—Å–∞—Ö
    const totalAngle = randomRotations * 360 + randomAngle;
    
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Ä–∞—â–µ–Ω–∏–µ
    wheel.style.transition = 'transform 5s cubic-bezier(0.17, 0.67, 0.24, 0.99)';
    wheel.style.transform = `rotate(${totalAngle}deg)`;
    
    // –ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –æ–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–æ–π –ø—Ä–∏–∑ –≤—ã–ø–∞–ª (–Ω–∞ —á—Ç–æ —É–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–µ–ª–∫–∞)
    setTimeout(() => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–ø–∞–≤—à–∏–π –ø—Ä–∏–∑ –ø–æ –∫–æ–Ω–µ—á–Ω–æ–º—É —É–≥–ª—É (—Å —É—á–µ—Ç–æ–º –ø–æ–ª–æ–∂–µ–Ω–∏—è —Å—Ç—Ä–µ–ª–∫–∏)
        const finalAngle = totalAngle % 360;
        const normalizedAngle = (360 - finalAngle) % 360; // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º —É–≥–æ–ª –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å–µ–≥–º–µ–Ω—Ç–∞
        const sectionAngle = 360 / gifts.length;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –≤—ã–ø–∞–≤—à–µ–≥–æ –ø—Ä–∏–∑–∞
        const sectionIndex = Math.floor(normalizedAngle / sectionAngle);
        const selectedGift = gifts[sectionIndex];
        
        console.log(`–ö–æ–ª–µ—Å–æ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–æ—Å—å –Ω–∞ —É–≥–ª–µ ${finalAngle}¬∞, –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —É–≥–æ–ª: ${normalizedAngle}¬∞`);
        console.log(`–í—ã–ø–∞–ª –ø—Ä–∏–∑: ${selectedGift.name} (–∏–Ω–¥–µ–∫—Å: ${sectionIndex}, —É–≥–æ–ª —Å–µ–∫—Ü–∏–∏: ${sectionAngle}¬∞)`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        showResult(selectedGift);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        sendResult(selectedGift);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–Ω–æ–ø–∫—É –≤ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        spinButton.disabled = false;
        spinButton.textContent = '–ö—Ä—É—Ç–∏—Ç—å –∫–æ–ª–µ—Å–æ';
    }, 5000); // 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤—Ä–∞—â–µ–Ω–∏–µ
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞ —Å —É—á–µ—Ç–æ–º —à–∞–Ω—Å–æ–≤
function selectRandomGift() {
    // –í—ã—á–∏—Å–ª—è–µ–º —Å—É–º–º–∞—Ä–Ω—É—é –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å
    const totalChance = gifts.reduce((sum, gift) => sum + gift.chance, 0);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ —Å—É–º–º–∞—Ä–Ω–æ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏
    let random = Math.random() * totalChance;
    
    // –ù–∞—Ö–æ–¥–∏–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫
    for (const gift of gifts) {
        if (random < gift.chance) {
            return gift;
        }
        random -= gift.chance;
    }
    
    // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫
    return gifts[0];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å —ç–º–æ–¥–∑–∏
function showResult(gift) {
    const resultContainer = document.getElementById('result-container');
    const prizeImage = document.getElementById('prize-image');
    const prizeName = document.getElementById('prize-name');
    const starsValue = document.getElementById('stars-value');
    
    // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —ç–º–æ–¥–∑–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –µ–≥–æ –≤ –±–æ–ª—å—à–æ–º —Ä–∞–∑–º–µ—Ä–µ
    if (prizeImage.tagName === 'IMG') {
        // –ó–∞–º–µ–Ω—è–µ–º —ç–ª–µ–º–µ–Ω—Ç img –Ω–∞ span —Å —ç–º–æ–¥–∑–∏
        const parent = prizeImage.parentNode;
        const emojiSpan = document.createElement('span');
        emojiSpan.id = 'prize-image';
        emojiSpan.classList.add('large-emoji');
        emojiSpan.textContent = gift.image;
        parent.replaceChild(emojiSpan, prizeImage);
    } else {
        // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç —É–∂–µ span, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        prizeImage.textContent = gift.image;
    }
    
    prizeName.textContent = gift.name;
    starsValue.textContent = gift.value;
    
    resultContainer.style.display = 'flex';
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
    document.getElementById('continue-btn').onclick = () => {
        resultContainer.style.display = 'none';
        updateUserData();
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
function sendResult(gift) {
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
    const user = window.Telegram.WebApp.initDataUnsafe.user;
    
    if (!user) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram');
        
        // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
        userData.balance += gift.value;
        userData.prizes.unshift({
            giftId: gift.id,
            giftName: gift.name,
            value: gift.value,
            date: new Date().toISOString()
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        updateProfileUI();
        return;
    }
    
    console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id);
    console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫:', gift);
    
    try {
        fetch('/api/save-result', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                userId: user.id,
                giftId: gift.id,
                giftValue: gift.value,
                giftName: gift.name
            })
        })
        .then(response => {
            if (!response.ok) {
                throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log('–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω:', data);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            userData.balance += gift.value;
            userData.prizes.unshift({
                giftId: gift.id,
                giftName: gift.name,
                value: gift.value,
                date: new Date().toISOString()
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
            updateProfileUI();
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', error);
            
            // –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            userData.balance += gift.value;
            userData.prizes.unshift({
                giftId: gift.id,
                giftName: gift.name,
                value: gift.value,
                date: new Date().toISOString()
            });
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
            updateProfileUI();
        });
    } catch (e) {
        console.error('–û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:', e);
        
        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –≤—Å–µ —Ä–∞–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        userData.balance += gift.value;
        userData.prizes.unshift({
            giftId: gift.id,
            giftName: gift.name,
            value: gift.value,
            date: new Date().toISOString()
        });
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateProfileUI();
    }
}
